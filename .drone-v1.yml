---
kind: pipeline
type: kubernetes
name: matrix-1

platform:
  os: linux
  arch: amd64

workspace:
  base: /build
  path: src/github.com/ukhomeoffice/cop-private-workflow-tasklist

steps:
- name: test
  pull: if-not-exists
  image: node:10
  commands:
  - npm ci
  - npm run test:coverage
  when:
    event:
    - push

- name: synch_dev_secrets
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/cop-secrets
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: DEV_DRONE_AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY:
      from_secret: DEV_DRONE_AWS_SECRET_ACCESS_KEY
    DEPLOY_ENV: dev
    DRONE_SERVER: https://drone-gh.acp.homeoffice.gov.uk
    DRONE_TOKEN:
      from_secret: DRONE_V1_PUBLIC_TOKEN
    DRONE_VERSION: ${DRONE_SYSTEM_VERSION}
  when:
    event:
    - promote
    target:
    - secrets

- name: synch_staging_secrets
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/cop-secrets
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: STAGING_DRONE_AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY:
      from_secret: STAGING_DRONE_AWS_SECRET_ACCESS_KEY
    DEPLOY_ENV: staging
    DRONE_SERVER: https://drone-gh.acp.homeoffice.gov.uk
    DRONE_TOKEN:
      from_secret: DRONE_V1_PUBLIC_TOKEN
    DRONE_VERSION: ${DRONE_SYSTEM_VERSION}
  when:
    event:
    - promote
    target:
    - secrets

- name: synch_production_secrets
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/cop-secrets
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: PRODUCTION_DRONE_AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY:
      from_secret: PRODUCTION_DRONE_AWS_SECRET_ACCESS_KEY
    DEPLOY_ENV: production
    DRONE_SERVER: https://drone-gh.acp.homeoffice.gov.uk
    DRONE_TOKEN:
      from_secret: DRONE_V1_PUBLIC_TOKEN
    DRONE_VERSION: ${DRONE_SYSTEM_VERSION}
  when:
    event:
    - promote
    target:
    - secrets

- name: build
  pull: if-not-exists
  image: docker:19.03.12-dind
  commands:
  - n=0; while [ "$n" -lt 60 ] && [ ! -e /var/run/docker.sock ]; do n=$(( n + 1 )); sleep 1; done
  - docker build -t cop-private-workflow-tasklist:$${DRONE_COMMIT_SHA} .
  volumes:
  - name: dockersock
    path: /var/run
  when:
    branch:
    - master
    event:
    - push

- name: image_to_quay
  image: plugins/docker
  settings:
    build_args:
    - WWW_STORAGE_KEY=$${WWW_DEV_STORAGE_KEY}
    registry: quay.io
    repo: quay.io/ukhomeofficedigital/cop-private-workflow-tasklist
    tags: ${DRONE_COMMIT_SHA}
  environment:
    DEV_WWW_STORAGE_KEY:
      from_secret: DEV_WWW_STORAGE_KEY
    DOCKER_PASSWORD:
      from_secret: QUAY_PASSWORD
    DOCKER_USERNAME:
      from_secret: QUAY_USERNAME
  when:
    branch:
    - master
    event:
    - push

- name: deploy_to_dev
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/kd
  commands:
  - export WWW_TAG=$${DRONE_COMMIT_SHA}
  - kd --insecure-skip-tls-verify -f kube/cert.yml
  - kd --insecure-skip-tls-verify -f kube/network-policy.yml
  - kd --insecure-skip-tls-verify -f kube/service.yml
  - kd --insecure-skip-tls-verify -f kube/deployment.yml --timeout=5m
  - kd --insecure-skip-tls-verify -f kube/ingress.yml
  environment:
    ANALYTICS_SITE_ID:
      from_secret: DEV_ANALYTICS_SITE_ID
    ANALYTICS_URL:
      from_secret: DEV_ANALYTICS_URL
    API_ATTACHMENT_PROTOCOL:
      from_secret: PROTOCOL_HTTPS
    API_ATTACHMENT_URL:
      from_secret: DEV_API_ATTACHMENT_URL
    API_COP_PROTOCOL:
      from_secret: PROTOCOL_HTTPS
    API_COP_URL:
      from_secret: DEV_API_COP_URL
    API_FORM_PROTOCOL:
      from_secret: PROTOCOL_HTTPS
    API_FORM_URL:
      from_secret: DEV_API_FORM_URL
    API_REF_PROTOCOL:
      from_secret: PROTOCOL_HTTPS
    API_REF_URL:
      from_secret: DEV_API_REF_URL
    BROWSER_VERSIONS:
      from_secret: DEV_WWW_BROWSER_VERSIONS
    DETECT_BROWSER:
      from_secret: DEV_WWW_DETECT_BROWSER
    ENGINE_PROTOCOL:
      from_secret: PROTOCOL_HTTPS
    ENGINE_URL:
      from_secret: DEV_ENGINE_URL
    KEYCLOAK_PROTOCOL:
      from_secret: PROTOCOL_HTTPS
    KEYCLOAK_REALM:
      from_secret: DEV_KEYCLOAK_REALM
    KEYCLOAK_URL:
      from_secret: DEV_KEYCLOAK_URL
    KUBE_NAMESPACE:
      from_secret: DEV_KUBE_NAMESPACE_PRIVATE_COP
    KUBE_SERVER:
      from_secret: DEV_KUBE_SERVER
    KUBE_TOKEN:
      from_secret: DEV_KUBE_TOKEN
    NGINX_IMAGE:
      from_secret: NGINX_IMAGE
    NGINX_TAG:
      from_secret: NGINX_TAG
    PRODUCT_PAGE_URI:
      from_secret: DEV_WWW_PRODUCT_PAGE_URI
    REPORT_PROTOCOL:
      from_secret: PROTOCOL_HTTPS
    REPORT_URL:
      from_secret: DEV_REPORT_URL
    WHITELIST:
      from_secret: DEV_WHITELIST
    WWW_IMAGE:
      from_secret: WWW_IMAGE
    WWW_KEYCLOAK_ACCESS_ROLE:
      from_secret: WWW_KEYCLOAK_ACCESS_ROLE
    WWW_KEYCLOAK_CLIENT_ID:
      from_secret: WWW_KEYCLOAK_CLIENT_ID
    WWW_NAME:
      from_secret: WWW_NAME
    WWW_PORT:
      from_secret: WWW_PORT
    WWW_PROTOCOL:
      from_secret: PROTOCOL_HTTPS
    WWW_STORAGE_KEY:
      from_secret: DEV_WWW_STORAGE_KEY
    WWW_UI_ENVIRONMENT:
      from_secret: DEV_WWW_UI_ENVIRONMENT
    WWW_UI_VERSION:
      from_secret: WWW_UI_VERSION
    WWW_URL:
      from_secret: DEV_WWW_URL
  when:
    branch:
    - master
    event:
    - push

- name: create-change-desc-dev
  pull: if-not-exists
  image: docker:git
  commands:
  - git show --name-only >> $SNOW_DESC_FILE
  when:
    branch:
    - master
    event:
    - push

- name: open-snow-change-dev
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/snowtify:latest
  environment:
    SNOW_ENDPOINT:
      from_secret: DEV_SERVICE_NOW_URL
    SNOW_EXTERNAL_ID: ${DRONE_REPO}:${DRONE_COMMIT_SHA}
    SNOW_TEST_PASS:
      from_secret: DEV_SERVICE_NOW_PASSWORD
    SNOW_TEST_USER:
      from_secret: DEV_SERVICE_NOW_USERNAME
  when:
    branch:
    - master
    event:
    - push

- name: complete-snow-change-dev
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/snowtify:latest
  settings:
    comments: Successful deployment of ${DRONE_REPO}:${DRONE_COMMIT_SHA}
    deployment_outcome: success
  environment:
    SNOW_ENDPOINT:
      from_secret: DEV_SERVICE_NOW_URL
    SNOW_TEST_PASS:
      from_secret: DEV_SERVICE_NOW_PASSWORD
    SNOW_TEST_USER:
      from_secret: DEV_SERVICE_NOW_USERNAME
  when:
    branch:
    - master
    event:
    - push
    status:
    - success

- name: cancel-snow-change-dev
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/snowtify:latest
  settings:
    comments: Failed deployment of ${DRONE_REPO}:${DRONE_COMMIT_SHA}
    deployment_outcome: fail
  environment:
    SNOW_ENDPOINT:
      from_secret: DEV_SERVICE_NOW_URL
    SNOW_TEST_PASS:
      from_secret: DEV_SERVICE_NOW_PASSWORD
    SNOW_TEST_USER:
      from_secret: DEV_SERVICE_NOW_USERNAME
  when:
    branch:
    - master
    event:
    - push
    status:
    - failure

- name: vulnerability-scan
  image: docker.digital.homeoffice.gov.uk/acp-anchore-submission:latest
  environment:
    DOCKERFILE: Dockerfile
    IMAGE_NAME: cop-private-workflow-tasklist:${DRONE_COMMIT_SHA}
    LOCAL_IMAGE: true
    SERVICE_URL: http://anchore-submission-server:10080
    TOLERATE: low
    WHITELIST_FILE: whitelist
  when:
    branch:
    - master
    event:
    - push

- name: deploy_to_staging
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/kd
  commands:
  - export WWW_TAG=$${DRONE_COMMIT_SHA}
  - kd --insecure-skip-tls-verify -f kube/cert.yml
  - kd --insecure-skip-tls-verify -f kube/network-policy.yml
  - kd --insecure-skip-tls-verify -f kube/service.yml
  - kd --insecure-skip-tls-verify -f kube/deployment.yml --timeout=5m
  - kd --insecure-skip-tls-verify -f kube/ingress.yml
  environment:
    ANALYTICS_SITE_ID:
      from_secret: STAGING_ANALYTICS_SITE_ID
    ANALYTICS_URL:
      from_secret: STAGING_ANALYTICS_URL
    API_ATTACHMENT_PROTOCOL:
      from_secret: PROTOCOL_HTTPS
    API_ATTACHMENT_URL:
      from_secret: STAGING_API_ATTACHMENT_URL
    API_COP_PROTOCOL:
      from_secret: PROTOCOL_HTTPS
    API_COP_URL:
      from_secret: STAGING_API_COP_URL
    API_FORM_PROTOCOL:
      from_secret: PROTOCOL_HTTPS
    API_FORM_URL:
      from_secret: STAGING_API_FORM_URL
    API_REF_PROTOCOL:
      from_secret: PROTOCOL_HTTPS
    API_REF_URL:
      from_secret: STAGING_API_REF_URL
    BROWSER_VERSIONS:
      from_secret: STAGING_WWW_BROWSER_VERSIONS
    DETECT_BROWSER:
      from_secret: STAGING_WWW_DETECT_BROWSER
    ENGINE_PROTOCOL:
      from_secret: PROTOCOL_HTTPS
    ENGINE_URL:
      from_secret: STAGING_ENGINE_URL
    KEYCLOAK_PROTOCOL:
      from_secret: PROTOCOL_HTTPS
    KEYCLOAK_REALM:
      from_secret: STAGING_KEYCLOAK_REALM
    KEYCLOAK_URL:
      from_secret: STAGING_KEYCLOAK_URL
    KUBE_NAMESPACE:
      from_secret: STAGING_KUBE_NAMESPACE_PRIVATE_COP
    KUBE_SERVER:
      from_secret: STAGING_KUBE_SERVER
    KUBE_TOKEN:
      from_secret: STAGING_KUBE_TOKEN
    NGINX_IMAGE:
      from_secret: NGINX_IMAGE
    NGINX_TAG:
      from_secret: NGINX_TAG
    PRODUCT_PAGE_URI:
      from_secret: STAGING_WWW_PRODUCT_PAGE_URI
    REPORT_PROTOCOL:
      from_secret: PROTOCOL_HTTPS
    REPORT_URL:
      from_secret: STAGING_REPORT_URL
    WHITELIST:
      from_secret: STAGING_WHITELIST
    WWW_IMAGE:
      from_secret: WWW_IMAGE
    WWW_KEYCLOAK_ACCESS_ROLE:
      from_secret: WWW_KEYCLOAK_ACCESS_ROLE
    WWW_KEYCLOAK_CLIENT_ID:
      from_secret: WWW_KEYCLOAK_CLIENT_ID
    WWW_NAME:
      from_secret: WWW_NAME
    WWW_PORT:
      from_secret: WWW_PORT
    WWW_PROTOCOL:
      from_secret: PROTOCOL_HTTPS
    WWW_STORAGE_KEY:
      from_secret: STAGING_WWW_STORAGE_KEY
    WWW_UI_ENVIRONMENT:
      from_secret: STAGING_WWW_UI_ENVIRONMENT
    WWW_UI_VERSION:
      from_secret: WWW_UI_VERSION
    WWW_URL:
      from_secret: STAGING_WWW_URL
  when:
    event:
    - promote
    target:
    - staging

- name: deploy_to_production
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/kd
  commands:
  - export WWW_TAG=$${DRONE_COMMIT_SHA}
  - kd --insecure-skip-tls-verify -f kube/cert.yml
  - kd --insecure-skip-tls-verify -f kube/network-policy.yml
  - kd --insecure-skip-tls-verify -f kube/service.yml
  - kd --insecure-skip-tls-verify -f kube/deployment.yml --timeout=5m
  - kd --insecure-skip-tls-verify -f kube/ingress.yml
  environment:
    ANALYTICS_SITE_ID:
      from_secret: PRODUCTION_ANALYTICS_SITE_ID
    ANALYTICS_URL:
      from_secret: PRODUCTION_ANALYTICS_URL
    API_ATTACHMENT_PROTOCOL:
      from_secret: PROTOCOL_HTTPS
    API_ATTACHMENT_URL:
      from_secret: PRODUCTION_API_ATTACHMENT_URL
    API_COP_PROTOCOL:
      from_secret: PROTOCOL_HTTPS
    API_COP_URL:
      from_secret: PRODUCTION_API_COP_URL
    API_FORM_PROTOCOL:
      from_secret: PROTOCOL_HTTPS
    API_FORM_URL:
      from_secret: PRODUCTION_API_FORM_URL
    API_REF_PROTOCOL:
      from_secret: PROTOCOL_HTTPS
    API_REF_URL:
      from_secret: PRODUCTION_API_REF_URL
    BROWSER_VERSIONS:
      from_secret: PRODUCTION_WWW_BROWSER_VERSIONS
    DETECT_BROWSER:
      from_secret: PRODUCTION_WWW_DETECT_BROWSER
    ENGINE_PROTOCOL:
      from_secret: PROTOCOL_HTTPS
    ENGINE_URL:
      from_secret: PRODUCTION_ENGINE_URL
    KEYCLOAK_PROTOCOL:
      from_secret: PROTOCOL_HTTPS
    KEYCLOAK_REALM:
      from_secret: PRODUCTION_KEYCLOAK_REALM
    KEYCLOAK_URL:
      from_secret: PRODUCTION_KEYCLOAK_URL
    KUBE_NAMESPACE:
      from_secret: PRODUCTION_KUBE_NAMESPACE_PRIVATE_COP
    KUBE_SERVER:
      from_secret: PRODUCTION_KUBE_SERVER
    KUBE_TOKEN:
      from_secret: PRODUCTION_KUBE_TOKEN
    NGINX_IMAGE:
      from_secret: NGINX_IMAGE
    NGINX_TAG:
      from_secret: NGINX_TAG
    PRODUCT_PAGE_URI:
      from_secret: PRODUCTION_WWW_PRODUCT_PAGE_URI
    REPORT_PROTOCOL:
      from_secret: PROTOCOL_HTTPS
    REPORT_URL:
      from_secret: PRODUCTION_REPORT_URL
    WHITELIST:
      from_secret: PRODUCTION_WHITELIST
    WWW_IMAGE:
      from_secret: WWW_IMAGE
    WWW_KEYCLOAK_ACCESS_ROLE:
      from_secret: WWW_KEYCLOAK_ACCESS_ROLE
    WWW_KEYCLOAK_CLIENT_ID:
      from_secret: WWW_KEYCLOAK_CLIENT_ID
    WWW_NAME:
      from_secret: WWW_NAME
    WWW_PORT:
      from_secret: WWW_PORT
    WWW_PROTOCOL:
      from_secret: PROTOCOL_HTTPS
    WWW_STORAGE_KEY:
      from_secret: PRODUCTION_WWW_STORAGE_KEY
    WWW_UI_ENVIRONMENT:
      from_secret: PRODUCTION_WWW_UI_ENVIRONMENT
    WWW_UI_VERSION:
      from_secret: WWW_UI_VERSION
    WWW_URL:
      from_secret: PRODUCTION_WWW_URL
  when:
    event:
    - promote
    target:
    - production

- name: create-change-desc-production
  pull: if-not-exists
  image: docker:git
  commands:
  - git show --name-only >> $SNOW_DESC_FILE
  when:
    event:
    - promote
    target:
    - production

- name: open-snow-change-production
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/snowtify:latest
  environment:
    SNOW_ENDPOINT:
      from_secret: PRODUCTION_SERVICE_NOW_URL
    SNOW_EXTERNAL_ID: ${DRONE_REPO}:${DRONE_COMMIT_SHA}
    SNOW_PROD_PASS:
      from_secret: PRODUCTION_SERVICE_NOW_PASSWORD
    SNOW_PROD_USER:
      from_secret: PRODUCTION_SERVICE_NOW_USERNAME
  when:
    event:
    - promote
    target:
    - production

- name: complete-snow-change-production
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/snowtify:latest
  settings:
    comments: Successful deployment of ${DRONE_REPO}:${DRONE_COMMIT_SHA}
    deployment_outcome: success
  environment:
    SNOW_ENDPOINT:
      from_secret: PRODUCTION_SERVICE_NOW_URL
    SNOW_PROD_PASS:
      from_secret: PRODUCTION_SERVICE_NOW_PASSWORD
    SNOW_PROD_USER:
      from_secret: PRODUCTION_SERVICE_NOW_USERNAME
  when:
    event:
    - promote
    status:
    - success
    target:
    - production

- name: cancel-snow-change-production
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/snowtify:latest
  settings:
    comments: Failed deployment of ${DRONE_REPO}:${DRONE_COMMIT_SHA}
    deployment_outcome: fail
  environment:
    SNOW_ENDPOINT:
      from_secret: PRODUCTION_SERVICE_NOW_URL
    SNOW_PROD_PASS:
      from_secret: PRODUCTION_SERVICE_NOW_PASSWORD
    SNOW_PROD_USER:
      from_secret: PRODUCTION_SERVICE_NOW_USERNAME
  when:
    event:
    - promote
    status:
    - failure
    target:
    - production

- name: notify
  pull: if-not-exists
  image: plugins/slack
  settings:
    channel: cop-deployments
    template: "{{#build.deployTo}}\n  *{{repo.name}} - Build {{build.number}} - {{uppercasefirst build.deployTo}} - {{uppercase build.status}}*\n  {{build.link}}\n{{else}}\n  *{{repo.name}} - Build {{build.number}} - Development - {{uppercase build.status}}*\n  {{build.link}}\n{{/build.deployTo}}\n"
    username: Drone Build Watcher
  environment:
    SLACK_WEBHOOK:
      from_secret: SLACK_WEBHOOK
  when:
    branch:
    - master
    event:
    - push
    - promote
    status:
    - success
    - failure

services:
- name: docker
  image: docker:19.03.12-dind
  volumes:
  - name: dockersock
    path: /var/run

- name: anchore-submission-server
  image: docker.digital.homeoffice.gov.uk/acp-anchore-submission:latest
  commands:
  - /anchore-submission server
  environment:
    ANCHORE_URL: acp-anchore.acp.homeoffice.gov.uk
    REGISTRY_URL: acp-ephemeral-registry.acp.homeoffice.gov.uk
  volumes:
  - name: dockersock
    path: /var/run

volumes:
- name: dockersock
  temp: {}

...
