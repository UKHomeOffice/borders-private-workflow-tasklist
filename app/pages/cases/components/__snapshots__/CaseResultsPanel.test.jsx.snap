// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CaseResultsPanel renders search result keys 1`] = `
<Router
  history={
    Object {
      "action": "POP",
      "block": [Function],
      "canGo": [Function],
      "createHref": [Function],
      "entries": Array [
        Object {
          "hash": "",
          "key": "trigs2",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
      ],
      "go": [Function],
      "goBack": [Function],
      "goForward": [Function],
      "index": 0,
      "length": 1,
      "listen": [Function],
      "location": Object {
        "hash": "",
        "key": "trigs2",
        "pathname": "/",
        "search": "",
        "state": undefined,
      },
      "push": [Function],
      "replace": [Function],
    }
  }
>
  <Provider
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <withRouter(Connect(Connect(withLog)))
      businessKeyQuery="BF-"
      caseSearchResults={
        Object {
          "_embedded": Object {
            "cases": Array [
              Object {
                "businessKey": "businessKey1",
              },
              Object {
                "businessKey": "businessKey2",
              },
            ],
          },
          "page": Object {
            "totalElements": 2,
          },
        }
      }
      clearActions={[Function]}
      dispatch={[Function]}
      getActions={[Function]}
      getState={[Function]}
      replaceReducer={[Function]}
      searching={false}
      subscribe={[Function]}
    >
      <Connect(Connect(withLog))
        businessKeyQuery="BF-"
        caseSearchResults={
          Object {
            "_embedded": Object {
              "cases": Array [
                Object {
                  "businessKey": "businessKey1",
                },
                Object {
                  "businessKey": "businessKey2",
                },
              ],
            },
            "page": Object {
              "totalElements": 2,
            },
          }
        }
        clearActions={[Function]}
        dispatch={[Function]}
        getActions={[Function]}
        getState={[Function]}
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "canGo": [Function],
            "createHref": [Function],
            "entries": Array [
              Object {
                "hash": "",
                "key": "trigs2",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
            ],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "index": 0,
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "key": "trigs2",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
        location={
          Object {
            "hash": "",
            "key": "trigs2",
            "pathname": "/",
            "search": "",
            "state": undefined,
          }
        }
        match={
          Object {
            "isExact": true,
            "params": Object {},
            "path": "/",
            "url": "/",
          }
        }
        replaceReducer={[Function]}
        searching={false}
        subscribe={[Function]}
      >
        <Connect(withLog)
          businessKeyQuery="BF-"
          caseSearchResults={
            Object {
              "_embedded": Object {
                "cases": Array [
                  Object {
                    "businessKey": "businessKey1",
                  },
                  Object {
                    "businessKey": "businessKey2",
                  },
                ],
              },
              "page": Object {
                "totalElements": 2,
              },
            }
          }
          clearActions={[Function]}
          dispatch={[Function]}
          getActions={[Function]}
          getCaseByKey={[Function]}
          getState={[Function]}
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "canGo": [Function],
              "createHref": [Function],
              "entries": Array [
                Object {
                  "hash": "",
                  "key": "trigs2",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              ],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "index": 0,
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "key": "trigs2",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
          location={
            Object {
              "hash": "",
              "key": "trigs2",
              "pathname": "/",
              "search": "",
              "state": undefined,
            }
          }
          match={
            Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            }
          }
          replaceReducer={[Function]}
          searching={false}
          subscribe={[Function]}
        >
          <withLog
            businessKeyQuery="BF-"
            caseSearchResults={
              Object {
                "_embedded": Object {
                  "cases": Array [
                    Object {
                      "businessKey": "businessKey1",
                    },
                    Object {
                      "businessKey": "businessKey2",
                    },
                  ],
                },
                "page": Object {
                  "totalElements": 2,
                },
              }
            }
            clearActions={[Function]}
            dispatch={[Function]}
            getActions={[Function]}
            getCaseByKey={[Function]}
            getState={[Function]}
            handleError={[Function]}
            handleUnauthorised={[Function]}
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "key": "trigs2",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "key": "trigs2",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "key": "trigs2",
                "pathname": "/",
                "search": "",
                "state": undefined,
              }
            }
            log={[Function]}
            logFailure={[Function]}
            logSuccess={[Function]}
            match={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
            replaceReducer={[Function]}
            resetErrors={[Function]}
            searching={false}
            subscribe={[Function]}
          >
            <CaseResultsPanel
              businessKeyQuery="BF-"
              caseSearchResults={
                Object {
                  "_embedded": Object {
                    "cases": Array [
                      Object {
                        "businessKey": "businessKey1",
                      },
                      Object {
                        "businessKey": "businessKey2",
                      },
                    ],
                  },
                  "page": Object {
                    "totalElements": 2,
                  },
                }
              }
              clearActions={[Function]}
              dispatch={[Function]}
              getActions={[Function]}
              getCaseByKey={[Function]}
              getState={[Function]}
              handleError={[Function]}
              handleUnauthorised={[Function]}
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "trigs2",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "trigs2",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
              location={
                Object {
                  "hash": "",
                  "key": "trigs2",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                }
              }
              log={[Function]}
              logFailure={[Function]}
              logSuccess={[Function]}
              match={
                Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/",
                  "url": "/",
                }
              }
              replaceReducer={[Function]}
              resetErrors={[Function]}
              searching={false}
              subscribe={[Function]}
            >
              <div
                className="govuk-grid-row"
              >
                <div
                  className="govuk-grid-column-one-quarter"
                >
                  <h3
                    className="govuk-heading-m"
                  >
                    Search results
                  </h3>
                  <span
                    className="govuk-caption-m"
                  >
                    Number of cases found
                  </span>
                  <h3
                    className="govuk-heading-m"
                  >
                    2
                  </h3>
                  <ul
                    className="govuk-list"
                  >
                    <li
                      key="businessKey1"
                    >
                      <a
                        className="govuk-link"
                        href=""
                        onClick={[Function]}
                      >
                        businessKey1
                      </a>
                    </li>
                    <li
                      key="businessKey2"
                    >
                      <a
                        className="govuk-link"
                        href=""
                        onClick={[Function]}
                      >
                        businessKey2
                      </a>
                    </li>
                  </ul>
                </div>
                <div
                  className="govuk-grid-column-three-quarters"
                />
              </div>
            </CaseResultsPanel>
          </withLog>
        </Connect(withLog)>
      </Connect(Connect(withLog))>
    </withRouter(Connect(Connect(withLog)))>
  </Provider>
</Router>
`;
